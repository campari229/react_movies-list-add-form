{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","validation","formIsValid","setState","addInfo","event","target","name","value","prevState","textValidation","trim","urlValidation","input","test","movieMaker","preventDefault","props","addMovie","onSubmit","this","onChange","placeholder","onBlur","type","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3eb7b9b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    validation: {\n      title: true,\n      description: true,\n      imgUrl: true,\n      imdbUrl: true,\n      imdbId: true,\n    },\n    formIsValid: false,\n  };\n\n  formIsValid = () => {\n    if (this.state.validation.title\n      && this.state.validation.description\n      && this.state.validation.imdbId\n      && this.state.validation.imdbUrl\n      && this.state.validation.imgUrl\n      && this.state.movie.title !== ''\n      && this.state.movie.description !== ''\n      && this.state.movie.imdbId !== ''\n      && this.state.movie.imdbUrl !== ''\n      && this.state.movie.imgUrl !== ''\n    ) {\n      this.setState({\n        formIsValid: true,\n      });\n    }\n  }\n\n  addInfo = (event) => {\n    const { name, value } = event.target;\n    const input = event.target;\n\n    input.className = `${name}-input`;\n\n    this.setState(prevState => ({\n      movie: {\n        ...prevState.movie,\n        [name]: value,\n      },\n    }));\n\n    this.setState(prevState => ({\n      validation: {\n        ...prevState.validation,\n        [name]: true,\n      },\n    }));\n\n    this.formIsValid();\n  }\n\n  textValidation = (event) => {\n    const { name, value } = event.target;\n\n    if (!value.trim()) {\n      this.setState(prevState => ({\n        validation: {\n          ...prevState.validation,\n          [name]: false,\n        },\n      }));\n    }\n\n    this.formIsValid();\n  }\n\n  urlValidation = (event) => {\n    const input = event.target;\n    const { name } = event.target;\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (!pattern.test(input.value)) {\n      this.setState(prevState => ({\n        validation: {\n          ...prevState.validation,\n          [name]: false,\n        },\n      }));\n    }\n\n    this.formIsValid();\n  }\n\n  movieMaker = (event) => {\n    event.preventDefault();\n    this.props.addMovie(this.state.movie);\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={this.movieMaker}\n        className=\"form\"\n      >\n        <input\n          className={this.state.validation.title\n            ? 'title-input'\n            : 'title-input title-input--error'\n          }\n          onChange={this.addInfo}\n          placeholder=\"Movie title\"\n          onBlur={this.textValidation}\n          name=\"title\"\n        />\n        {!this.state.validation.title\n          ? <p className=\"form-error-message\">Please enter a title</p>\n          : <></>\n        }\n        <input\n          onChange={this.addInfo}\n          placeholder=\"Movie description\"\n          onBlur={this.textValidation}\n          className={this.state.validation.description\n            ? 'description-input'\n            : 'description-input description-input--error'\n          }\n          name=\"description\"\n        />\n        {!this.state.validation.description\n          ? <p className=\"form-error-message\">Please enter a description</p>\n          : <></>\n        }\n        <input\n          onChange={this.addInfo}\n          placeholder=\"Image URL\"\n          onBlur={this.urlValidation}\n          className={this.state.validation.imgUrl\n            ? 'imgUrl-input'\n            : 'imgUrl-input imgUrl-input--error'\n          }\n          name=\"imgUrl\"\n        />\n        {!this.state.validation.imgUrl\n          ? <p className=\"form-error-message\">Please enter a valid imgUrl</p>\n          : <></>\n        }\n        <input\n          onChange={this.addInfo}\n          placeholder=\"IMDB URL\"\n          onBlur={this.urlValidation}\n          name=\"imdbUrl\"\n          className={this.state.validation.imdbUrl\n            ? 'imdbUrl-input'\n            : 'imdbUrl-input imdbUrl-input--error'\n          }\n        />\n        {!this.state.validation.imdbUrl\n          ? <p className=\"form-error-message\">Please enter a valid imdbUrl</p>\n          : <></>\n        }\n        <input\n          onChange={this.addInfo}\n          placeholder=\"IMDB ID\"\n          onBlur={this.textValidation}\n          className={this.state.validation.imdbId\n            ? 'imdbId-input'\n            : 'imdbId-input imdbId-input--error'\n          }\n          name=\"imdbId\"\n        />\n        {!this.state.validation.imdbId\n          ? <p className=\"form-error-message\">Please enter a imdbId</p>\n          : <></>\n        }\n        <button\n          type=\"submit\"\n          disabled={!this.state.formIsValid}\n          className=\"btn\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h1>Add your movie</h1>\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}